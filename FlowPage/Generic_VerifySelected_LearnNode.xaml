<Activity mc:Ignorable="sap sap2010 sads" x:Class="G_VerifyClassification" this:G_VerifyClassification.Learn_NodeToSelect="Classification"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Learn_NodeToSelect" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>G_VerifyClassification_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="G_VerifyClassification" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:UiElement" Name="UiElement_NodeTitle" />
      <Variable x:TypeArguments="x:String" Name="get_NodePopupTitle" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="Expected_List" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="ListItems" />
    </Sequence.Variables>
    <ui:WaitUiElementAppear DisplayName="Find Popup title" FoundElement="[UiElement_NodeTitle]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
      <ui:WaitUiElementAppear.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="84848b286e157ca6c21d1f19c6a4ec07" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl idx='1' parentid='app' tag='H3' /&gt;" WaitForReady="INTERACTIVE" />
      </ui:WaitUiElementAppear.Target>
    </ui:WaitUiElementAppear>
    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text of popup title" sap2010:WorkflowViewState.IdRef="GetValue_1">
      <ui:GetValue.Target>
        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[UiElement_NodeTitle]" WaitForReady="INTERACTIVE" />
      </ui:GetValue.Target>
      <ui:GetValue.Value>
        <OutArgument x:TypeArguments="x:String">[get_NodePopupTitle]</OutArgument>
      </ui:GetValue.Value>
    </ui:GetValue>
    <If Condition="[Learn_NodeToSelect.Equals(&quot;Classification&quot;)]" DisplayName="If (Condition if the user selects Classification node)" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="D_FLow_periodic_GENERIC_INFO: User has selected Classification. Invoking Classification workflow " />
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
            <If Condition="[get_NodePopupTitle.Contains(&quot;Classification&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="D_FLow_periodic_TCNo_107_SUCCESS: Verified popup title for node window" />
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="D_FLow_periodic_TCNo_107_FAILED: Could not verify popup title window for classification" />
              </If.Else>
            </If>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[Expected_List]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[{"","","Decision Tree","Logistic Regression","Random Forest","Naive Bayes Classifier"}]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="D_FLow_periodic_GENERIC_TRACE: User didn't select classification.. Moving ON" />
      </If.Else>
    </If>
    <If Condition="[Learn_NodeToSelect.Equals(&quot;Regression&quot;)]" DisplayName="If (Condition if the user selects Regression node)" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="D_FLow_periodic_GENERIC_INFO: User has selected Regression. Invoking Regression workflow " />
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
            <If Condition="[get_NodePopupTitle.Contains(&quot;Regression&quot;)]" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="D_FLow_periodic_TCNo_147_SUCCESS: Verified popup title for node window" />
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="D_FLow_periodic_TCNo_147_FAILED: Could not verify popup title window for Regression" />
              </If.Else>
            </If>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[Expected_List]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[{"","","Linear Regression","Decision Tree Regression","Survival Regression"}]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="D_FLow_periodic_GENERIC_TRACE: User didn't select Regression.. Moving ON" />
      </If.Else>
    </If>
    <If Condition="[Learn_NodeToSelect.Equals(&quot;Clustering&quot;)]" DisplayName="If (Condition if the user selects Clustering node)" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="D_FLow_periodic_GENERIC_INFO: User has selected Clustering. Invoking Clustering workflow " />
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
            <If Condition="[get_NodePopupTitle.Contains(&quot;Clustering&quot;)]" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="D_FLow_periodic_TCNo_179_SUCCESS: Verified popup title for node window" />
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Error" Message="D_FLow_periodic_TCNo_179_FAILED: Could not verify popup title window for Clustering" />
              </If.Else>
            </If>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[Expected_List]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[{"","","K-Means"}]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Trace" Message="D_FLow_periodic_GENERIC_TRACE: User didn't select Clustering.. Moving ON" />
      </If.Else>
    </If>
    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'SPAN'" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="155edeea4384511df8dd01c18eefc3e1" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl aaname='Select Algorithm   ' tag='SPAN' /&gt;" WaitForReady="INTERACTIVE" />
      </ui:Click.Target>
    </ui:Click>
    <ui:FindChildren Children="[ListItems]" DisplayName="Find children 'SPAN'" Filter="&lt;webctrl /&gt;" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_CHILDREN">
      <ui:FindChildren.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d0803d765a5d4de0002610feffeeb8cd" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl id='ui-select-choices-*' tag='LI' /&gt;" WaitForReady="INTERACTIVE" />
      </ui:FindChildren.Target>
    </ui:FindChildren>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Generic_VerifyDropdownList workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Generic\Generic_VerifyDropdownList.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)" x:Key="ListItems">[ListItems]</InArgument>
        <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="Expected_DropDownList">[Expected_List]</InArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="SuccessFlag" />
        <InArgument x:TypeArguments="x:String" x:Key="TC_No" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Classification_AlgorithmScreen workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Classification_AlgorithmScreen.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="AlgorithmName" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <sads:DebugSymbol.Symbol>d1ZEOlxVSVBhdGhcTW9zYWljX1JlZ3Jlc3Npb25TdWl0ZV9VSVBhdGhcRmxvd1BhZ2VcR2VuZXJpY19WZXJpZnlTZWxlY3RlZF9MZWFybk5vZGUueGFtbEYBewGKAQECRQPVAQ4CAQFMBVAeAgFPUQVYEwIBSlkFdAoCATZ1BZABCgIBIpEBBawBCgIBDq0BBbsBEAIBDLwBBcABFwIBCMEBBcgBHQIBA8kBBdMBFQIBAkxJTGACAVFOmAFO+QECAVBWMVZFAgFLU19TdgIBTVkTWUwCATdbCW8UAgE7cglyyAECATl1E3VIAgEjdwmLARQCASeOAQmOAcQBAgElkQETkQFIAgEPkwEJpwEUAgETqgEJqgHFAQIBEbkBmAG5AYECAgENvgGYAb4B+wECAQu8AVe8AWoCAQq8AR+8ASwCAQnEAV/EAW4CAQbBAccBwQHwAQIBBcMBV8MBYgIBBFwLXN4BAgFIXQtuFgIBPHJ3csUBAgE6eAt41gECATR5C4oBFgIBKI4Bd44BwQECASaUAQuUAdYBAgEglQELpgEWAgEUqgF4qgHCAQIBElx4XNsBAgFJXg1lEgIBQWYNbRYCAT14eHjTAQIBNXoNgQESAgEtggENiQEWAgEplAF4lAHTAQIBIZYBDZ0BEgIBGZ4BDaUBFgIBFV4bXlYCAUJgEWDJAQIBRmMRY9sBAgFEa0lroQECAUBoSmhZAgE+eht6UgIBLnwRfMkBAgEyfxF/1wECATCHATqHAYgBAgEshAFKhAFZAgEqlgEblgFSAgEamAERmAHKAQIBHpsBEZsB2AECARyjATqjAU0CARigAUqgAVkCARZgfmDGAQIBR2N/Y9gBAgFFfH58xgECATN/f3/UAQIBMZgBf5gBxwECAR+bAYABmwHVAQIBHQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="1036,106" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="1036,68" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="653,60" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="675,463">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="697,718">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1036,866" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="653,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="675,463">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="697,718">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1036,866" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="653,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="675,463">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="697,718">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1036,866" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="1036,106" />
      <sap2010:ViewStateData Id="FindChildren_1" sap:VirtualizedContainerService.HintSize="1036,106" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="1036,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="1036,289" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1058,3804">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="G_VerifyClassification_1" sap:VirtualizedContainerService.HintSize="1098,3884" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>